{
  // Place your learn-web-components workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Web Component stub": {
    "scope": "javascript,typescript",
    "prefix": "stub",
    "body": [
      "const app$1Template = document.createElement('template')",
      "app$1Template.innerHTML = `",
      "",
      "<!-- Style -->",
      "<style>",
      "",
      "</style>",
      "",
      "<!-- Template -->",
      "$0",
      "`",
      "",
      "class App$1 extends HTMLElement {",
      "\tstatic get observedAttributes() {",
      "\t\treturn []",
      "\t}",
      "",
      "\tconstructor() {",
      "\t\tsuper()",
      "\t\tthis._shadowRoot = this.attachShadow({ mode: 'open' })",
      "\t\tthis.shadowRoot.innerHTML = app$1Template.innerHTML",
      "\t}",
      "",
      "\tconnectedCallback() {}",
      "",
      "\t// Getters and setters",
      "}",
      "",
      "customElements.define('app-${1/(.*)/${1:/downcase}/}', App$1)"
    ],
    "description": ""
  }
}
